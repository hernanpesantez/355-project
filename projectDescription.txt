Internet and Web Technologies
(CSCI 355/655)
Term Project: Description and Road Map
Summer 2020 
(Last Updated: June 28, 2020)


The project for the Summer 2020 semester is to build a website for playing a board game such as chess, checkers, or backgammon; a card game such as poker, blackjack, or solitaire; or an electronic-style game like minesweeper.


The software should be hosted on the Internet, either on the Venus server where each student has an account, or on independent (paid or free) hosting procured by the student. 


The website should have a database “back end” so that games can be stored, reviewed, and even continued from where they left off. Those using Venus will generally therefore use MySQL as that is automatically provided on that server. Those using their own hosting may choose to use other database management systems. An entire lecture - roughly midway through the course - will be devoted to databases. In addition, acting on a database from the server side will also be covered in the lectures on PHP and Node.js. Mirroring the coverage in class is the treatment in Zybooks, both of databases themselves and interacting with them through server-side languages.   


Additional requirements are listed in the week-by-week “roadmap” that appears below. 


Students are welcome - and indeed, encouraged - to work in small development teams. The recommended team size is four; larger teams may be acceptable, although generally additional features should be supported to justify the larger group size.  Development teams may span different sections of CSCI 355. Team roles may include:
* Project Manager
* Database designer and administrator
* Website design and styling
* Front-end programming
* Back-end (server-side) programming
Students within a team may likely cover multiple roles. In any event, even as they may specialize in specific areas, they should be familiar with one another’s work, as these are all important practical skills and will likely be tested on the exams. 


Here is a “Project Road Map” (time-table) to help students and their teams progress toward the final deliverable:


Week 0 (Pre-Course)
Settle into course
* Subscribe to our course Zybook
* Enroll in TopHat
* Familiarize yourself with our Google drive
* Make sure you are receiving Blackboard emails and/or regularly login to Blackboard


Claim your account on the department provided server
* See login and connection instructions at https://venus.cs.qc.cuny.edu/~xiuyi/  
* Connect remotely using SmartTTY (Windows) or Terminal app (Mac)
* Download and configure FTP client (such as Filezilla) to transfer files between your device and the server


Week 1
Choose a development team
* Exchange contact information
* Choose a forum for communication: email, text, WhatsApp, Slack, Google group etc.
* Give your team a name
* Appoint a project manager
* Assign each member a project area for which they have primary responsibility


Choose one game (these are just suggestions)
* Board game such as checkers, chess, backgammon, othello, connect four
* Bingo, lotto
* Card game such as poker, blackjack, solitaire 
* Minesweeper


Design a rudimentary website including a menu / nav-bar with the following static features
* About the Developers - a few sentences and photo of each member of your development team
* Contact Us - e-mail link or form to send email to the development team
* Rules of the game 
* Brief history of the game
* Link to Google search about your game: e.g. https://www.google.com/search?q=chess
* Static links to other websites where this game can also be played
Sample navar code (navbar.html and style.css) is provided as a starting point, but you need to customize both the content to meet the aforementioned requirements and its style to your personal preferences. 


Deploy your website to the department provided server. 
* See login and connection instructions at https://venus.cs.qc.cuny.edu/~xiuyi/  
* Some details appear below under “Technical Information”
* Connect remotely using SmartTTY (Windows) or Terminal app (Mac)


Week 2
Initial phase of game implementation
* Write Javascript to create the board or otherwise set up the game
* Use CSS to style the game appropriately


Week 3
Complete game implementation
Record all plays/moves of the game to a file in JSON or XML format so that a given game can be reconstructed and played from where it was left off 


Week 4
Design a database back-end
Create registration and login screen


Week 5
Store moves into the database.
Choose a from a list of historical games stored in your database and replay the game that way, perhaps continuing where it left off


Week 6
Add final touches to your game website
Create a video demonstrating how your game works and how to choose a historical game from your database




________________


Technical Information


Step 1: Connect to the Server:
These are the connection credentials:
host-name: mars.cs.qc.cuny.edu
user-name: LLFFNNNN
password: the full eight digits of your CUNYFirst Id
(where LL = first two letters of your last name, FF = first two letters of first name, NNNN = last four digits of CUNYFirst Id)
Detailed login instructions with screenshots can be found at https://venus.cs.qc.cuny.edu/~xiuyi/linux_login.html


Step 2: Create Directories and Set Permissions::
Grant access to the root with the command:
$ chmod 755 $HOME
Create a new directory and grant access with the commands
$ mkdir public_html
$ chmod 755 public_html
Switch to the public_html directory, create a subdirectory “cs355” (lowercase “cs”) for our course, and set permissions with the commands:
$ cd public_html
$ mkdir cs355
$ chmod 755 cs355
$ cd cs355


Step 3: Move Your Files
Use FTP software to move your file(s) to the cs355 directory. By default, your homepage should be called index.html, but you can another name, just that it then becomes a mandatory part of your URL (rather than being implied). You may need to change permissions on any additional files uploaded, such as 
$ chmod 755 index.html 


Step 4: Test your webpage
Open a browser of your choice
Type http://venus.cs.qc.cuny.edu/~LLDDNNNN/cs355/ (where LLDDNNNN is as defined in Step 1) You should see your homepage. If you get an error about access/permissions, there is probably an issue with what happened in Step 2.